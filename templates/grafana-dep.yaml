apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.server.name }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{ .Values.server.name }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ .Values.server.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.server.name }}
  template:
    metadata:
      annotations:
      {{- range $key, $value := .Values.server.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
      labels:
        app: {{ .Values.server.name }}
        component: "{{ .Values.server.name }}"
        release: "{{ .Release.Name }}"
    spec:
      securityContext:
        runAsUser: 472
        fsGroup: 472
      containers:
        - name: {{ .Values.server.name }}
          image: "{{ .Values.server.image }}"
          imagePullPolicy: {{ default "Always" .Values.server.imagePullPolicy }}
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.name }}-secret
                  key: grafana-admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.name }}-secret
                  key: grafana-admin-password
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /login
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: false              
      volumes:
        - name: grafana-storage
          configMap:
            name: {{ .Values.server.name }}-config
        - name: grafana-datasources
          configMap:
            name: {{ .Values.server.name }}-dashs
        - name: grafana-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.server.name }}-config
